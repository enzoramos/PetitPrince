/*
 *Auteur : E.Ramos, J.Bidet, J.Ramsamy
 *Description : Ce module definie la structure des "dessins" ainsi que le designe du service
 */

module PetitPrince{

  

    struct Point{
        long x;
        long y;
    };

    

    interface Draw {
        attribute long id;
        attribute long author;
        attribute Draw inner_draw;
        attribute long mark;

        exception non_applicable{string msg;};
        exception unexpected_draw{string msg;};

        long area()
            raises(non_applicable);
        long perimeter()
            raises(non_applicable);
        void homothetie(in long indice);
        void translation(in long x, in long y);
        void rotation(in long angle);
        void symCenter();
        void symAxial();
        void addDraw(in Draw d)
            raises(unexpected_draw);
    
    };

    interface Line : Draw {
        attribute Point start;
        attribute Point end;
    };

    interface Cercle : Draw {
        attribute Point center;
        attribute long ray;
    };
    
    interface Ellipses : Draw{
        attribute Point center1;
        attribute Point center2;
        attribute long ray;
    };

    typedef sequence<Draw> DrawList;

    interface PetitPrinceService{
        attribute DrawList draw_list;

        void pushDraw(in Draw d);
        void getDraw(in long id);
        void markDraw(in long mark, in long id);
 
    };

};